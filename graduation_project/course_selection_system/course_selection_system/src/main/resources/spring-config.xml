<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p" 
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
 

	<!-- data source : DriverManagerDataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="org.gjt.mm.mysql.Driver"/>
	<property name="url" value="jdbc:mysql://localhost:3306/db_course_selection_system?characterEncoding=utf8"/> 
	<property name="username" value="root"/> 
	<property name="password" value="xian520."/>
	</bean>

	<!-- mybatis 的SqlSession 的工厂 ： SqlSessionFactoryBean dataSource : 应用数据源
	mybatis 定义数据源，同意加载配置
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations">
			<array>
				<value>classpath:mapper/*.xml</value>
			</array>
		</property>
		<property name="typeAliasesPackage" value="model"></property>  
		<property name="plugins">
       <array>
					<bean class="com.github.pagehelper.PageHelper">
					     <!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
					    <property name="properties">
					        <value>
					            dialect=mysql
					            reasonable=true
					            supportMethodsArguments=true
					            params=count=countSql
					            autoRuntimeDialect=true
					        </value>
					    </property>
					</bean>
       </array>
        </property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="mapper"/>
        <!-- 3.2.2版本新特性，markerInterface可以起到mappers配置的作用，详细情况需要看Marker接口类 -->
        <property name="markerInterface" value="util.MyMapper"/>
        <!-- 通用Mapper通过属性注入进行配置，默认不配置时会注册Mapper<T>接口
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
        -->
    </bean>
	
	<!--  
        3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory  
  
        basePackage:指定sql映射文件/接口所在的包（自动扫描）  
    -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="mapper"></property>  
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean>  
    
    <!-- 
        4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 
    -->  
    <bean id="txManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean>  
    
    <!-- 5. 使用声明式事务  
         transaction-manager：引用上面定义的事务管理器  
     -->  
    <tx:annotation-driven transaction-manager="txManager" />  
    
</beans>